/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as msRest from "@azure/ms-rest-js";


export const PropertyAttributes: msRest.CompositeMapper = {
  serializedName: "PropertyAttributes",
  type: {
    name: "Composite",
    className: "PropertyAttributes",
    modelProperties: {
      enabled: {
        serializedName: "enabled",
        type: {
          name: "Boolean"
        }
      },
      notBefore: {
        serializedName: "notBefore",
        type: {
          name: "DateTime"
        }
      },
      expires: {
        serializedName: "expires",
        type: {
          name: "DateTime"
        }
      },
      created: {
        serializedName: "created",
        type: {
          name: "DateTime"
        }
      },
      updated: {
        serializedName: "updated",
        type: {
          name: "DateTime"
        }
      }
    }
  }
};

export const PropertyVersion: msRest.CompositeMapper = {
  serializedName: "PropertyVersion",
  type: {
    name: "Composite",
    className: "PropertyVersion",
    modelProperties: {
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      attributes: {
        serializedName: "attributes",
        type: {
          name: "Composite",
          className: "PropertyAttributes"
        }
      }
    }
  }
};

export const Certificate: msRest.CompositeMapper = {
  serializedName: "Certificate",
  type: {
    name: "Composite",
    className: "Certificate",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "Object"
        }
      },
      contentType: {
        serializedName: "contentType",
        type: {
          name: "String"
        }
      },
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String"
        }
      },
      selfUri: {
        readOnly: true,
        serializedName: "selfUri",
        type: {
          name: "String"
        }
      },
      selectors: {
        serializedName: "selectors",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      attributes: {
        serializedName: "attributes",
        type: {
          name: "Composite",
          className: "PropertyAttributes"
        }
      },
      versions: {
        serializedName: "versions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PropertyVersion"
            }
          }
        }
      },
      baseUri: {
        serializedName: "baseUri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const EncryptionKeyValue: msRest.CompositeMapper = {
  serializedName: "EncryptionKeyValue",
  type: {
    name: "Composite",
    className: "EncryptionKeyValue",
    modelProperties: {
      n: {
        serializedName: "n",
        type: {
          name: "ByteArray"
        }
      },
      e: {
        serializedName: "e",
        type: {
          name: "ByteArray"
        }
      },
      dp: {
        serializedName: "dp",
        type: {
          name: "ByteArray"
        }
      },
      dq: {
        serializedName: "dq",
        type: {
          name: "ByteArray"
        }
      },
      qi: {
        serializedName: "qi",
        type: {
          name: "ByteArray"
        }
      },
      p: {
        serializedName: "p",
        type: {
          name: "ByteArray"
        }
      },
      q: {
        serializedName: "q",
        type: {
          name: "ByteArray"
        }
      },
      x: {
        serializedName: "x",
        type: {
          name: "ByteArray"
        }
      },
      y: {
        serializedName: "y",
        type: {
          name: "ByteArray"
        }
      },
      d: {
        serializedName: "d",
        type: {
          name: "ByteArray"
        }
      },
      k: {
        serializedName: "k",
        type: {
          name: "ByteArray"
        }
      },
      keyHsm: {
        serializedName: "key_hsm",
        type: {
          name: "ByteArray"
        }
      }
    }
  }
};

export const EncryptionKey: msRest.CompositeMapper = {
  serializedName: "EncryptionKey",
  type: {
    name: "Composite",
    className: "EncryptionKey",
    modelProperties: {
      keyType: {
        serializedName: "keyType",
        type: {
          name: "Number"
        }
      },
      keySize: {
        serializedName: "keySize",
        type: {
          name: "Number"
        }
      },
      keyOperations: {
        serializedName: "keyOperations",
        type: {
          name: "Number"
        }
      },
      ellipticCurveType: {
        serializedName: "ellipticCurveType",
        type: {
          name: "Number"
        }
      },
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "Composite",
          className: "EncryptionKeyValue"
        }
      },
      contentType: {
        serializedName: "contentType",
        type: {
          name: "String"
        }
      },
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String"
        }
      },
      selfUri: {
        readOnly: true,
        serializedName: "selfUri",
        type: {
          name: "String"
        }
      },
      selectors: {
        serializedName: "selectors",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      attributes: {
        serializedName: "attributes",
        type: {
          name: "Composite",
          className: "PropertyAttributes"
        }
      },
      versions: {
        serializedName: "versions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PropertyVersion"
            }
          }
        }
      },
      baseUri: {
        serializedName: "baseUri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ApiResponseString: msRest.CompositeMapper = {
  serializedName: "ApiResponse_String_",
  type: {
    name: "Composite",
    className: "ApiResponseString",
    modelProperties: {
      errors: {
        readOnly: true,
        serializedName: "errors",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Sequence",
              element: {
                type: {
                  name: "String"
                }
              }
            }
          }
        }
      },
      isValid: {
        readOnly: true,
        serializedName: "isValid",
        type: {
          name: "Boolean"
        }
      },
      requestId: {
        readOnly: true,
        serializedName: "requestId",
        type: {
          name: "String"
        }
      },
      result: {
        readOnly: true,
        serializedName: "result",
        type: {
          name: "String"
        }
      },
      statusCode: {
        readOnly: true,
        serializedName: "statusCode",
        type: {
          name: "Number"
        }
      }
    }
  }
};

export const Property: msRest.CompositeMapper = {
  serializedName: "Property",
  type: {
    name: "Composite",
    className: "Property",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      },
      contentType: {
        serializedName: "contentType",
        type: {
          name: "String"
        }
      },
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String"
        }
      },
      selfUri: {
        readOnly: true,
        serializedName: "selfUri",
        type: {
          name: "String"
        }
      },
      selectors: {
        serializedName: "selectors",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      attributes: {
        required: true,
        serializedName: "attributes",
        type: {
          name: "Composite",
          className: "PropertyAttributes"
        }
      },
      baseUri: {
        serializedName: "baseUri",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const Secret: msRest.CompositeMapper = {
  serializedName: "Secret",
  type: {
    name: "Composite",
    className: "Secret",
    modelProperties: {
      id: {
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        type: {
          name: "String"
        }
      },
      version: {
        serializedName: "version",
        type: {
          name: "String"
        }
      },
      value: {
        serializedName: "value",
        type: {
          name: "String"
        }
      },
      contentType: {
        serializedName: "contentType",
        type: {
          name: "String"
        }
      },
      eTag: {
        serializedName: "eTag",
        type: {
          name: "String"
        }
      },
      selfUri: {
        readOnly: true,
        serializedName: "selfUri",
        type: {
          name: "String"
        }
      },
      selectors: {
        serializedName: "selectors",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "String"
            }
          }
        }
      },
      attributes: {
        serializedName: "attributes",
        type: {
          name: "Composite",
          className: "PropertyAttributes"
        }
      },
      versions: {
        serializedName: "versions",
        type: {
          name: "Sequence",
          element: {
            type: {
              name: "Composite",
              className: "PropertyVersion"
            }
          }
        }
      },
      baseUri: {
        serializedName: "baseUri",
        type: {
          name: "String"
        }
      }
    }
  }
};
